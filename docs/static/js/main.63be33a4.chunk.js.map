{"version":3,"sources":["components/SkillsBar.js","components/spinner/Spinner.js","services/getBreedImages.js","img/no_img.png","components/Modal.js","components/Breed.js","services/getBreeds.js","components/Error.js","components/Breeds.js","components/Search.js","hooks/useForm.js","CatsApp.js","index.js"],"names":["SkillsBar","word","skillName","skillValue","className","split","map","letter","index","toLowerCase","toUpperCase","join","replace","Spinner","getBreedImages","breed_id","a","url","fetch","resp","json","data","images","value","Modal","activeBreed","handleClose","modalType","useState","loading","setLoading","setImages","name","temperament","origin","description","life_span","alt_names","affection_level","child_friendly","dog_friendly","energy_level","health_issues","intelligence","shedding_level","social_needs","stranger_friendly","image","skills","useEffect","id","then","style","overflowY","type","aria-label","title","onClick","focusable","viewBox","aria-hidden","d","trim","img","src","alt","Object","keys","length","no_img","t","entries","skill","Breed","breed","open","setOpen","setmodalType","handleOpen","slice","getBreeds","currentPage","limit","url_breeds","api_key","headers","pair","Error","msg","Breeds","searchBreed","breeds","setBreeds","totalBreeds","setTotalBreeds","setCurrentPage","totalPages","setTotalPages","paginationCount","Math","ceil","handlePagination","e","selected","searchResults","search_breed","filter","includes","filteredBreed","previousLabel","nextLabel","breakLabel","pageCount","onPageChange","forcePage","marginPagesDisplayed","pageRangeDisplayed","containerClassName","pageClassName","previousClassName","previousLinkClassName","nextClassName","nextLinkClassName","disabledClassName","activeClassName","activeLinkClassName","Search","setSearchBreed","initialState","values","setValues","target","useForm","formValues","handleFormChange","handleSearchChange","preventDefault","onSubmit","autoComplete","color","onChange","placeholder","CatsApp","href","rel","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.63be33a4.chunk.js","sourcesContent":["\nconst SkillsBar = ({skillName, skillValue}) => {\n\n    const capitalize = (word) => {\n        return word\n          .split('')\n          .map((letter, index) =>\n            index ? letter.toLowerCase() : letter.toUpperCase(),\n          )\n          .join('')\n          .replace('_', ' ');\n    };\n\n\n    return (\n        <div className=\"skills\">\n            <p className=\"skills__title\">{capitalize(skillName)}</p>\n            <ul className=\"skills__container\">\n                <li className={skillValue > 0 ? \"skills__container__item skills__container__active\": \"skills__container__item\"}></li>\n                <li className={skillValue > 1 ? \"skills__container__item skills__container__active\": \"skills__container__item\"}></li>\n                <li className={skillValue > 2 ? \"skills__container__item skills__container__active\": \"skills__container__item\"}></li>\n                <li className={skillValue > 3 ? \"skills__container__item skills__container__active\": \"skills__container__item\"}></li>\n                <li className={skillValue > 4 ? \"skills__container__item skills__container__active\": \"skills__container__item\"}></li>\n            </ul>\n        </div>\n    )\n    \n}\n\n\nexport default SkillsBar;\n","import React from 'react';\nimport './Spinner.css';\n\nconst Spinner = () => {\n    return ( \n\n        <div className=\"sk-circle\">\n            <div className=\"sk-circle1 sk-child\"></div>\n            <div className=\"sk-circle2 sk-child\"></div>\n            <div className=\"sk-circle3 sk-child\"></div>\n            <div className=\"sk-circle4 sk-child\"></div>\n            <div className=\"sk-circle5 sk-child\"></div>\n            <div className=\"sk-circle6 sk-child\"></div>\n            <div className=\"sk-circle7 sk-child\"></div>\n            <div className=\"sk-circle8 sk-child\"></div>\n            <div className=\"sk-circle9 sk-child\"></div>\n            <div className=\"sk-circle10 sk-child\"></div>\n            <div className=\"sk-circle11 sk-child\"></div>\n            <div className=\"sk-circle12 sk-child\"></div>\n        </div>\n\n     );\n}\n \nexport default Spinner;","\n\nexport const getBreedImages = async(breed_id) => {\n\n    const api_key = '3a6c399a-f92b-4e8c-b5a5-142c8effa2f1';\n\n    let url = `https://api.thecatapi.com/v1/images/search?api_key=${api_key}&breed_id=${breed_id}&size=thumb&limit=6`;\n  \n    const resp = await fetch(url);\n    const data = await resp.json();\n\n    const images = data.map( (value, index) => data[index].url);\n\n    return images;\n}\n","export default __webpack_public_path__ + \"static/media/no_img.04fe48ca.png\";","import React, { useEffect, useState } from 'react';\nimport SkillsBar from './SkillsBar';\n\nimport Spinner from './spinner/Spinner';\nimport { getBreedImages } from '../services/getBreedImages';\nimport no_img from '../img/no_img.png';\n\nconst Modal = ({activeBreed, handleClose, modalType}) => {\n\n    const [loading, setLoading] = useState(false);\n    const [images, setImages] = useState([]);\n\n    const {name, temperament, origin, description, life_span, alt_names, affection_level, child_friendly, dog_friendly, energy_level, health_issues, intelligence, shedding_level, social_needs, stranger_friendly, image} = activeBreed;\n\n    const skills = {affection_level, energy_level, health_issues, intelligence, shedding_level, social_needs, child_friendly, dog_friendly, stranger_friendly};\n\n\n    useEffect(() => {  \n        setLoading(true)\n        getBreedImages(activeBreed.id)\n            .then(images => {\n                setImages(images)   \n                setLoading(false)\n            })\n    }, [activeBreed]);\n\n\n    // TODO: Cerrar el modal al hacer click fuera\n    return (\n        <div className=\"modal\">\n            <div className=\"modal__content\">\n                <div className=\"modal__content__inner\" style={{overflowY: modalType === 'images' ? 'hidden': 'auto'}}>\n                    <button className=\"closeButton\" type=\"button\" aria-label=\"close\" title=\"Cerrar\" onClick={handleClose}>\n                        <span className=\"closeButton__label\">\n                            <svg className=\"closeButton__label-svg\" focusable=\"false\" viewBox=\"0 0 24 24\" aria-hidden=\"true\">\n                                <path d=\"M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z\"></path>\n                            </svg>\n                        </span>\n                    </button>\n\n                    <h3 className=\"modalTitle\">{name} {alt_names && alt_names.trim() !== '' ? <span>{`(${alt_names})`}</span> : ''}</h3>\n                    <div className=\"modalContent\">\n                    { modalType === 'images' ?\n                        <div className=\"gallery\">\n                            {loading \n                                ? <Spinner/>\n                                :(\n                                    images.map( (img) => \n                                        <div className=\"gallery__item\" key={img}>\n                                            <img src={img} alt={name}/>\n                                        </div>\n                                    )\n                                )\n                            }\n                        </div>\n                    : (<>\n                        <div className=\"modalContent__main\">\n                            <img src={(image && Object.keys(image).length > 0 ) ? image.url : no_img} alt={name} className=\"modalContent__main-picture\"/>\n                            <div className=\"modalContent__main-text\">\n                                <p>{description}</p>\n                                <div>\n                                    <h3>Temperamento</h3>\n                                    <div className=\"chip-container\">\n                                    {\n                                        temperament.split(',').map( (t) => <span key={t}className=\"chip\">{t}</span>)\n                                    }\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n\n                        <h3 className=\"modalTitlesInline\">País de origen:</h3> \n                        <span> {origin}</span>\n                        \n                        <br/>\n\n                        <h3 className=\"modalTitlesInline\">Esperanza de vida:</h3> \n                        <span> {life_span} años</span>\n                                             \n                        <h3>Skills</h3>\n                        <div className=\"skills-component\">\n                            {\n                            Object.entries(skills).map((skill) => {\n                                return(\n                                    <SkillsBar\n                                        key={skill[0]}\n                                        skillName={skill[0]}\n                                        skillValue={skill[1]}\n                                    />\n                                )\n                            })\n                            }\n                        </div>\n                        </>)\n                    }\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n\n}\n\nexport default Modal;\n","import { useState } from 'react';\n\nimport Modal from './Modal';\nimport no_img from '../img/no_img.png';\n\nconst Breed = ({breed}) => {\n\n    const {id, name, description, image} = breed;\n\n    const [open, setOpen] = useState(false);\n    const [modalType, setmodalType] = useState('details');\n\n    const handleOpen = () => {\n        setOpen(true);\n    };\n\n    const handleClose = () => {\n        setOpen(false);\n    };\n\n\n    return (\n        <>\n        <div key={id} className=\"breed-card\">\n            <img src={(image && Object.keys(image).length > 0 ) ? image.url : no_img} alt={name} title=\"Ver galería\"  className=\"breed-card__img\"\n                onClick={() => {\n                    setmodalType('images')\n                    handleOpen();\n                }}\n            />\n            <div className=\"breed-card__content\">\n                <div className=\"breed-card__content-txt\">\n                    <h3>{name}</h3>\n                    <p>{description.slice(0, 130)}...</p>\n                </div>\n                <button   \n                    className=\"breed-card__content-btn\"               \n                    onClick={() => {\n                        setmodalType('details')\n                        handleOpen();\n                    }}>Ver detalles</button>\n            </div>\n        </div>\n\n        {\n        open ?\n            <Modal\n                activeBreed={breed}\n                handleClose={handleClose}\n                modalType={modalType}\n            />\n        :null\n        }\n        </>\n    )\n    \n}\n\n\nexport default Breed;","\nexport const getBreeds = async(currentPage, limit = '') => {\n\n    const api_key = '3a6c399a-f92b-4e8c-b5a5-142c8effa2f1';\n\n    let url_breeds = `https://api.thecatapi.com/v1/breeds?api_key=${api_key}`;\n\n    if (limit !== '') {\n        url_breeds = `https://api.thecatapi.com/v1/breeds?api_key=${api_key}&limit=${limit}&page=${currentPage}&order=Asc`;\n    }\n\n    const resp = await fetch(url_breeds);\n    const data = await resp.json();\n\n    //console.log(resp.headers)\n\n    for (let pair of resp.headers.entries()) {\n    //console.log(pair[0])\n        switch (pair[0]) {\n            case 'pagination-count':\n                data['paginationCount'] = pair[1];\n            break;\n            case 'pagination-limit':\n                data['paginationLimit'] = pair[1];\n            break;\n            case 'pagination-page':\n                data['paginationPage'] = pair[1];\n            break;\n            default:\n                break;\n        }\n    }\n\n    //console.log(data)\n    //console.log(url_breeds)\n\n    return data;\n}\n\n","import React from 'react';\n\nconst Error = ({msg}) => {\n    return ( \n         \n        <div className=\"msg-error\">\n            <div className=\"msg-error__icon\">\n                <svg className=\"msg-error__icon__svg\" focusable=\"false\" viewBox=\"0 0 24 24\" aria-hidden=\"true\"><path d=\"M12 5.99L19.53 19H4.47L12 5.99M12 2L1 21h22L12 2zm1 14h-2v2h2v-2zm0-6h-2v4h2v-4z\"></path></svg>\n            </div>\n            <h3>{msg}</h3>\n        </div>\n     );\n}\n \nexport default Error;\n","import React, {useState, useEffect} from 'react';\n\nimport ReactPaginate from 'react-paginate';\n\nimport Breed from './Breed';\nimport Spinner from './spinner/Spinner';\nimport { getBreeds } from '../services/getBreeds';\nimport Error from './Error';\n\n\nconst Breeds = ({searchBreed}) => {\n\n    const [loading, setLoading] = useState(false);\n\n    const [breeds, setBreeds] = useState([]);\n\n    // Buscador\n    const [totalBreeds, setTotalBreeds] = useState([]);\n \n    // Pagination\n    const [currentPage, setCurrentPage] = useState(0);\n    const [totalPages, setTotalPages] = useState(1);\n    const pageLimit = 9; // Mostrar 9 elementos en cada página\n     \n\n    // Buscador\n    useEffect(() => { \n        setLoading(true); \n        getBreeds()\n            .then(breeds => {\n                setTotalBreeds(breeds) \n                setLoading(false)\n            })\n    }, [searchBreed]);\n\n\n    // Pagination\n    useEffect(() => {  \n        setLoading(true);\n        getBreeds(currentPage, pageLimit)\n            .then(breeds => {\n                const {paginationCount} = breeds;\n                setBreeds(breeds)\n                setTotalPages(Math.ceil(paginationCount / pageLimit))\n                setLoading(false)\n            })\n    }, [currentPage]);\n\n\n    const handlePagination = (e) => {\n        setCurrentPage(e.selected);\n    };\n\n    // Case insensitive\n    let searchResults = [];\n    if (Object.keys(searchBreed).length > 0 && searchBreed.search_breed !== '') {\n        searchResults = totalBreeds.filter(breed => breed.name.toLowerCase().includes(searchBreed.search_breed.toLowerCase()));\n    }\n               \n    return (\n        <> \n        {loading \n        ? <Spinner/> \n        : Object.keys(searchBreed).length > 0 && searchBreed.search_breed !== ''\n            ? (\n                searchResults.length > 0\n                ? (\n                    <div className=\"breeds-cards\">\n                        {searchResults.map(filteredBreed => (\n                            <Breed key={filteredBreed.id} breed={filteredBreed} />\n                        ))}\n                    </div>\n                )\n                : <Error msg=\"No se encontraron resultados\"/>\n            )              \n            : (\n                <>\n                <ReactPaginate\n                    previousLabel=\"&lt;\"\n                    nextLabel=\"&gt;\"\n                    breakLabel={<span className=\"gap\">...</span>}\n                    pageCount={totalPages}\n                    onPageChange={handlePagination}\n                    forcePage={currentPage}\n                    marginPagesDisplayed={3}\n                    pageRangeDisplayed={2}\n                    containerClassName={\"pagination\"}\n                    pageClassName={\"page-link\"}\n                    previousClassName={\"page-link\"}\n                    previousLinkClassName={\"page-item\"}\n                    nextClassName={\"page-link\"}\n                    nextLinkClassName={\"page-item\"}\n                    disabledClassName={\"disabled\"}\n                    activeClassName={\"page-item active\"}\n                    activeLinkClassName={\"page-link\"}\n                />\n                <div className=\"breeds-cards\">\n                    {breeds.map( breed => (\n                        <Breed key={breed.id} breed={breed} />\n                    ))}\n                </div>\n                <ReactPaginate\n                    previousLabel=\"&lt;\"\n                    nextLabel=\"&gt;\"\n                    breakLabel={<span className=\"gap\">...</span>}\n                    pageCount={totalPages}\n                    onPageChange={handlePagination}\n                    forcePage={currentPage}\n                    marginPagesDisplayed={3}\n                    pageRangeDisplayed={2}\n                    containerClassName={\"pagination pagination-bottom\"}\n                    pageClassName={\"page-link\"}\n                    previousClassName={\"page-link\"}\n                    previousLinkClassName={\"page-item\"}\n                    nextClassName={\"page-link\"}\n                    nextLinkClassName={\"page-item\"}\n                    disabledClassName={\"disabled\"}\n                    activeClassName={\"page-item active\"}\n                    activeLinkClassName={\"page-link\"}\n                />\n                </>\n            )\n        }\n        </>\n    )\n    \n}\n\n\nexport default Breeds;","import React from 'react';\n\nimport { useForm } from '../hooks/useForm';\n\nconst Search = ({setSearchBreed}) => {\n\n    const [ formValues, handleFormChange ] = useForm('');\n\n    const handleSearchChange = (e) => {\n        e.preventDefault();\n        setSearchBreed(formValues);   \n    };\n\n\n    return (\n        <div className=\"searchform\">\n            <h2>Buscador de razas de gatos</h2>\n            <form onSubmit={handleSearchChange} className=\"searchform__form\">\n                <input \n                    autoComplete='off' \n                    id=\"search_breed\"\n                    name=\"search_breed\"\n                    color=\"secondary\"\n                    onChange={handleFormChange}\n                    placeholder='Buscar raza...'\n                />\n                <button onClick={handleSearchChange}>Buscar</button>\n            </form>\n        </div>\n    )   \n\n}\n\n\nexport default Search;\n","import { useState } from 'react';\n\n\nexport const useForm = ( initialState = {} ) => {\n    \n    const [values, setValues] = useState(initialState);\n\n    const reset = () => {\n        setValues( initialState );\n    }\n\n\n    const handleInputChange = ({ target }) => {\n\n        setValues({\n            ...values,\n            [ target.name ]: target.value\n        });\n\n    }\n\n    return [ values, handleInputChange, reset ];\n\n}","import { useState } from 'react';\n\nimport Breeds from './components/Breeds';\nimport Search from './components/Search';\n\n\nfunction CatsApp() {\n\n\tconst [searchBreed, setSearchBreed] = useState({});\n\n\treturn (\n\t\t<>\n\t\t\t<header>\n\t\t\t\t<Search\n\t\t\t\t\tsetSearchBreed={setSearchBreed}\n\t\t\t\t/>\n\t\t\t</header>\n\t\t\t<main>\n\t\t\t\t<Breeds\n\t\t\t\t\tsearchBreed={searchBreed}\n\t\t\t\t/>\n\t\t\t</main>\n\t\t\t<footer>&copy; Designed and developed by&nbsp;\n            \t<a href=\"https://github.com/tatianallorente/CatsApp-React\" target=\"_blank\" rel=\"noreferrer\" >Tatiana Llorente</a>\n            </footer>\n\t\t</>\n\t);\n}\n\nexport default CatsApp;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport CatsApp from './CatsApp';\n\nimport './sass/styles.scss'\n\nReactDOM.render(\n    <CatsApp />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}