{"version":3,"sources":["components/SkillsBar.js","components/spinner/Spinner.js","services/getBreedImages.js","img/no_img.png","components/Modal.js","components/Breed.js","services/getBreeds.js","components/Error.js","components/Breeds.js","components/Search.js","hooks/useForm.js","CatsApp.js","index.js"],"names":["SkillsBar","word","skillName","skillValue","className","split","map","letter","index","toLowerCase","toUpperCase","join","replace","Spinner","getBreedImages","breed_id","url","fetch","resp","json","data","images","value","Modal","activeBreed","handleClose","modalType","useState","loading","setLoading","setImages","name","temperament","origin","description","life_span","alt_names","affection_level","child_friendly","dog_friendly","energy_level","health_issues","intelligence","shedding_level","social_needs","stranger_friendly","image","skills","useEffect","id","then","style","overflowY","type","title","onClick","focusable","viewBox","d","trim","img","src","alt","Object","keys","length","no_img","t","entries","skill","Breed","breed","open","setOpen","setmodalType","handleOpen","slice","getBreeds","currentPage","limit","url_breeds","api_key","headers","pair","Error","msg","Breeds","searchBreed","breeds","setBreeds","totalBreeds","setTotalBreeds","setCurrentPage","totalPages","setTotalPages","paginationCount","Math","ceil","handlePagination","e","selected","searchResults","search_breed","filter","includes","filteredBreed","previousLabel","nextLabel","breakLabel","pageCount","onPageChange","forcePage","marginPagesDisplayed","pageRangeDisplayed","containerClassName","pageClassName","previousClassName","previousLinkClassName","nextClassName","nextLinkClassName","disabledClassName","activeClassName","activeLinkClassName","Search","setSearchBreed","initialState","values","setValues","handleInputChange","target","useForm","formValues","handleFormChange","handleSearchChange","preventDefault","onSubmit","autoComplete","color","onChange","placeholder","CatsApp","href","rel","ReactDOM","render","document","getElementById"],"mappings":"wMA8BeA,EA7BG,SAAH,GAAiC,IAExBC,EAFJC,EAAS,EAATA,UAAWC,EAAU,EAAVA,WAa3B,OACI,sBAAKC,UAAU,SAAQ,UACnB,mBAAGA,UAAU,gBAAe,UAbhBH,EAa6BC,EAZtCD,EACJI,MAAM,IACNC,KAAI,SAACC,EAAQC,GAAK,OACjBA,EAAQD,EAAOE,cAAgBF,EAAOG,aAAa,IAEpDC,KAAK,IACLC,QAAQ,IAAK,QAOZ,qBAAIR,UAAU,oBAAmB,UAC7B,oBAAIA,UAAWD,EAAa,EAAI,oDAAqD,4BACrF,oBAAIC,UAAWD,EAAa,EAAI,oDAAqD,4BACrF,oBAAIC,UAAWD,EAAa,EAAI,oDAAqD,4BACrF,oBAAIC,UAAWD,EAAa,EAAI,oDAAqD,4BACrF,oBAAIC,UAAWD,EAAa,EAAI,oDAAqD,iCAKrG,ECHeU,G,MArBC,WACZ,OAEI,sBAAKT,UAAU,YAAW,UACtB,qBAAKA,UAAU,wBACf,qBAAKA,UAAU,wBACf,qBAAKA,UAAU,wBACf,qBAAKA,UAAU,wBACf,qBAAKA,UAAU,wBACf,qBAAKA,UAAU,wBACf,qBAAKA,UAAU,wBACf,qBAAKA,UAAU,wBACf,qBAAKA,UAAU,wBACf,qBAAKA,UAAU,yBACf,qBAAKA,UAAU,yBACf,qBAAKA,UAAU,2BAI3B,G,cCpBaU,EAAc,iDAAG,WAAMC,GAAQ,uFAIoD,MAF5E,uCAEZC,EAAG,6DAFS,uCAEuD,qBAAaD,EAAQ,gCAEzEE,MAAMD,GAAK,KAAD,EAAnB,OAAJE,EAAI,gBACSA,EAAKC,OAAO,KAAD,EAE8B,OAFtDC,EAAI,OAEJC,EAASD,EAAKd,KAAK,SAACgB,EAAOd,GAAK,OAAKY,EAAKZ,GAAOQ,GAAG,IAAC,kBAEpDK,GAAM,4CAChB,gBAZ0B,sCCFZ,MAA0B,mCCuG1BE,EAhGD,SAAH,GAA+C,IAA1CC,EAAW,EAAXA,YAAaC,EAAW,EAAXA,YAAaC,EAAS,EAATA,UAEtC,EAA8BC,oBAAS,GAAM,mBAAtCC,EAAO,KAAEC,EAAU,KAC1B,EAA4BF,mBAAS,IAAG,mBAAjCN,EAAM,KAAES,EAAS,KAEjBC,EAAkNP,EAAlNO,KAAMC,EAA4MR,EAA5MQ,YAAaC,EAA+LT,EAA/LS,OAAQC,EAAuLV,EAAvLU,YAAaC,EAA0KX,EAA1KW,UAAWC,EAA+JZ,EAA/JY,UAAWC,EAAoJb,EAApJa,gBAAiBC,EAAmId,EAAnIc,eAAgBC,EAAmHf,EAAnHe,aAAcC,EAAqGhB,EAArGgB,aAAcC,EAAuFjB,EAAvFiB,cAAeC,EAAwElB,EAAxEkB,aAAcC,EAA0DnB,EAA1DmB,eAAgBC,EAA0CpB,EAA1CoB,aAAcC,EAA4BrB,EAA5BqB,kBAAmBC,EAAStB,EAATsB,MAE1MC,EAAS,CAACV,kBAAiBG,eAAcC,gBAAeC,eAAcC,iBAAgBC,eAAcN,iBAAgBC,eAAcM,qBAcxI,OAXAG,qBAAU,WACNnB,GAAW,GACXf,EAAeU,EAAYyB,IACtBC,MAAK,SAAA7B,GACFS,EAAUT,GACVQ,GAAW,EACf,GACR,GAAG,CAACL,IAKA,qBAAKpB,UAAU,QAAO,SAClB,qBAAKA,UAAU,iBAAgB,SAC3B,sBAAKA,UAAU,wBAAwB+C,MAAO,CAACC,UAAyB,WAAd1B,EAAyB,SAAU,QAAQ,UACjG,wBAAQtB,UAAU,cAAciD,KAAK,SAAS,aAAW,QAAQC,MAAM,SAASC,QAAS9B,EAAY,SACjG,sBAAMrB,UAAU,qBAAoB,SAChC,qBAAKA,UAAU,yBAAyBoD,UAAU,QAAQC,QAAQ,YAAY,cAAY,OAAM,SAC5F,sBAAMC,EAAE,gHAKpB,qBAAItD,UAAU,aAAY,UAAE2B,EAAK,IAAEK,GAAkC,KAArBA,EAAUuB,OAAgB,0CAAWvB,EAAS,OAAc,MAC5G,qBAAKhC,UAAU,eAAc,SACb,WAAdsB,EACE,qBAAKtB,UAAU,UAAS,SACnBwB,EACK,cAAC,EAAO,IAENP,EAAOf,KAAK,SAACsD,GAAG,OACZ,qBAAKxD,UAAU,gBAAe,SAC1B,qBAAKyD,IAAKD,EAAKE,IAAK/B,KADY6B,EAE9B,MAKvB,qCACC,sBAAKxD,UAAU,qBAAoB,UAC/B,qBAAKyD,IAAMf,GAASiB,OAAOC,KAAKlB,GAAOmB,OAAS,EAAMnB,EAAM9B,IAAMkD,EAAQJ,IAAK/B,EAAM3B,UAAU,+BAC/F,sBAAKA,UAAU,0BAAyB,UACpC,4BAAI8B,IACJ,gCACI,6BAAI,iBACJ,qBAAK9B,UAAU,iBAAgB,SAE3B4B,EAAY3B,MAAM,KAAKC,KAAK,SAAC6D,GAAC,OAAK,sBAAa/D,UAAU,OAAM,SAAE+D,GAApBA,EAA6B,eAO3F,oBAAI/D,UAAU,oBAAmB,SAAC,uBAClC,iCAAM,IAAE6B,KAER,uBAEA,oBAAI7B,UAAU,oBAAmB,SAAC,uBAClC,iCAAM,IAAE+B,EAAU,cAElB,6BAAI,WACJ,qBAAK/B,UAAU,mBAAkB,SAE7B2D,OAAOK,QAAQrB,GAAQzC,KAAI,SAAC+D,GACxB,OACI,cAAC,EAAS,CAENnE,UAAWmE,EAAM,GACjBlE,WAAYkE,EAAM,IAFbA,EAAM,GAKvB,iBAW5B,EC1CeC,EAtDD,SAAH,GAAiB,IAAZC,EAAK,EAALA,MAELtB,EAAgCsB,EAAhCtB,GAAIlB,EAA4BwC,EAA5BxC,KAAMG,EAAsBqC,EAAtBrC,YAAaY,EAASyB,EAATzB,MAE9B,EAAwBnB,oBAAS,GAAM,mBAAhC6C,EAAI,KAAEC,EAAO,KACpB,EAAkC9C,mBAAS,WAAU,mBAA9CD,EAAS,KAAEgD,EAAY,KAExBC,EAAa,WACfF,GAAQ,EACZ,EAOA,OACI,qCACA,sBAAcrE,UAAU,aAAY,UAChC,qBAAKyD,IAAMf,GAASiB,OAAOC,KAAKlB,GAAOmB,OAAS,EAAMnB,EAAM9B,IAAMkD,EAAQJ,IAAK/B,EAAMuB,MAAM,iBAAelD,UAAU,kBAChHmD,QAAS,WACLmB,EAAa,UACbC,GACJ,IAEJ,sBAAKvE,UAAU,sBAAqB,UAChC,sBAAKA,UAAU,0BAAyB,UACpC,6BAAK2B,IACL,8BAAIG,EAAY0C,MAAM,EAAG,KAAK,YAElC,wBACIxE,UAAU,0BACVmD,QAAS,WACLmB,EAAa,WACbC,GACJ,EAAE,SAAC,sBAjBL1B,GAsBVuB,EACI,cAAC,EAAK,CACFhD,YAAa+C,EACb9C,YAhCQ,WAChBgD,GAAQ,EACZ,EA+BY/C,UAAWA,IAElB,OAKT,E,QCvDamD,EAAS,iDAAG,WAAMC,GAAW,2GAQrC,OARuCC,EAAK,+BAAG,GAI5CC,EAAU,sDAFRC,EAAU,wCAIF,KAAVF,IACAC,EAAU,sDAAkDC,EAAO,kBAAUF,EAAK,iBAASD,EAAW,eACzG,SAEkB7D,MAAM+D,GAAY,KAAD,EAA1B,OAAJ9D,EAAI,gBACSA,EAAKC,OAAO,KAAD,EAAxBC,EAAI,OAEV,cAEiBF,EAAKgE,QAAQd,WAAS,2DAA9Be,EAAI,aAEDA,EAAK,GAAE,OACN,qBADM,KACY,GAGlB,qBAHkB,KAGA,GAGlB,oBAHkB,KAGD,oBALgB,OAAlC/D,EAAsB,gBAAI+D,EAAK,GAAG,6BAGA,OAAlC/D,EAAsB,gBAAI+D,EAAK,GAAG,6BAGD,OAAjC/D,EAAqB,eAAI+D,EAAK,GAAG,mOAUtC/D,GAAI,iEACd,gBApCqB,sCCaPgE,EAZD,SAAH,GAAe,IAAVC,EAAG,EAAHA,IACZ,OAEI,sBAAKjF,UAAU,YAAW,UACtB,qBAAKA,UAAU,kBAAiB,SAC5B,qBAAKA,UAAU,uBAAuBoD,UAAU,QAAQC,QAAQ,YAAY,cAAY,OAAM,SAAC,sBAAMC,EAAE,yFAE3G,6BAAK2B,MAGjB,ECqHeC,EAvHA,SAAH,GAAuB,IAAlBC,EAAW,EAAXA,YAEb,EAA8B5D,oBAAS,GAAM,mBAAtCC,EAAO,KAAEC,EAAU,KAE1B,EAA4BF,mBAAS,IAAG,mBAAjC6D,EAAM,KAAEC,EAAS,KAGxB,EAAsC9D,mBAAS,IAAG,mBAA3C+D,EAAW,KAAEC,EAAc,KAGlC,EAAsChE,mBAAS,GAAE,mBAA1CmD,EAAW,KAAEc,EAAc,KAClC,EAAoCjE,mBAAS,GAAE,mBAAxCkE,EAAU,KAAEC,EAAa,KAKhC9C,qBAAU,WACNnB,GAAW,GACXgD,IACK3B,MAAK,SAAAsC,GACFG,EAAeH,GACf3D,GAAW,EACf,GACR,GAAG,CAAC0D,IAIJvC,qBAAU,WACNnB,GAAW,GACXgD,EAAUC,EAjBI,GAkBT5B,MAAK,SAAAsC,GACF,IAAOO,EAAmBP,EAAnBO,gBACPN,EAAUD,GACVM,EAAcE,KAAKC,KAAKF,EArBlB,IAsBNlE,GAAW,EACf,GACR,GAAG,CAACiD,IAGJ,IAAMoB,EAAmB,SAACC,GACtBP,EAAeO,EAAEC,SACrB,EAGIC,EAAgB,GAKpB,OAJItC,OAAOC,KAAKuB,GAAatB,OAAS,GAAkC,KAA7BsB,EAAYe,eACnDD,EAAgBX,EAAYa,QAAO,SAAAhC,GAAK,OAAIA,EAAMxC,KAAKtB,cAAc+F,SAASjB,EAAYe,aAAa7F,cAAc,KAIrH,mCACCmB,EACC,cAAC,EAAO,IACRmC,OAAOC,KAAKuB,GAAatB,OAAS,GAAkC,KAA7BsB,EAAYe,aAE7CD,EAAcpC,OAAS,EAEnB,qBAAK7D,UAAU,eAAc,SACxBiG,EAAc/F,KAAI,SAAAmG,GAAa,OAC5B,cAAC,EAAK,CAAwBlC,MAAOkC,GAAzBA,EAAcxD,GAA4B,MAIhE,cAAC,EAAK,CAACoC,IAAI,iCAGb,qCACA,cAAC,IAAa,CACVqB,cAAc,IACdC,UAAU,IACVC,WAAY,sBAAMxG,UAAU,MAAK,SAAC,QAClCyG,UAAWhB,EACXiB,aAAcZ,EACda,UAAWjC,EACXkC,qBAAsB,EACtBC,mBAAoB,EACpBC,mBAAoB,aACpBC,cAAe,YACfC,kBAAmB,YACnBC,sBAAuB,YACvBC,cAAe,YACfC,kBAAmB,YACnBC,kBAAmB,WACnBC,gBAAiB,mBACjBC,oBAAqB,cAEzB,qBAAKtH,UAAU,eAAc,SACxBoF,EAAOlF,KAAK,SAAAiE,GAAK,OACd,cAAC,EAAK,CAAgBA,MAAOA,GAAjBA,EAAMtB,GAAoB,MAG9C,cAAC,IAAa,CACVyD,cAAc,IACdC,UAAU,IACVC,WAAY,sBAAMxG,UAAU,MAAK,SAAC,QAClCyG,UAAWhB,EACXiB,aAAcZ,EACda,UAAWjC,EACXkC,qBAAsB,EACtBC,mBAAoB,EACpBC,mBAAoB,+BACpBC,cAAe,YACfC,kBAAmB,YACnBC,sBAAuB,YACvBC,cAAe,YACfC,kBAAmB,YACnBC,kBAAmB,WACnBC,gBAAiB,mBACjBC,oBAAqB,kBAQzC,E,eC5FeC,EA9BA,SAAH,GAA0B,IAArBC,EAAc,EAAdA,eAEb,ECHmB,WAA0B,IAAxBC,EAAY,uDAAG,CAAC,EAErC,EAA4BlG,mBAASkG,GAAa,mBAA3CC,EAAM,KAAEC,EAAS,KAOlBC,EAAoB,SAAH,GAAoB,IAAdC,EAAM,EAANA,OAEzBF,EAAU,2BACHD,GAAM,kBACPG,EAAOlG,KAAQkG,EAAO3G,QAGhC,EAEA,MAAO,CAAEwG,EAAQE,EAdH,WACVD,EAAWF,EACf,EAcJ,CDjB6CK,CAAQ,IAAG,mBAA5CC,EAAU,KAAEC,EAAgB,KAE9BC,EAAqB,SAAClC,GACxBA,EAAEmC,iBACFV,EAAeO,EACnB,EAGA,OACI,sBAAK/H,UAAU,aAAY,UACvB,6BAAI,+BACJ,uBAAMmI,SAAUF,EAAoBjI,UAAU,mBAAkB,UAC5D,uBACIoI,aAAa,MACbvF,GAAG,eACHlB,KAAK,eACL0G,MAAM,YACNC,SAAUN,EACVO,YAAY,mBAEhB,wBAAQpF,QAAS8E,EAAmB,SAAC,gBAKrD,EEFeO,MAvBf,WAEC,MAAsCjH,mBAAS,CAAC,GAAE,mBAA3C4D,EAAW,KAAEqC,EAAc,KAElC,OACC,qCACC,iCACC,cAAC,EAAM,CACNA,eAAgBA,MAGlB,+BACC,cAAC,EAAM,CACNrC,YAAaA,MAGf,mCAAQ,qCACE,mBAAGsD,KAAK,mDAAmDZ,OAAO,SAASa,IAAI,aAAY,SAAE,0BAI1G,E,MCpBAC,IAASC,OACL,cAAC,EAAO,IACVC,SAASC,eAAe,Q","file":"static/js/main.6906c27d.chunk.js","sourcesContent":["\r\nconst SkillsBar = ({skillName, skillValue}) => {\r\n\r\n    const capitalize = (word) => {\r\n        return word\r\n          .split('')\r\n          .map((letter, index) =>\r\n            index ? letter.toLowerCase() : letter.toUpperCase(),\r\n          )\r\n          .join('')\r\n          .replace('_', ' ');\r\n    };\r\n\r\n\r\n    return (\r\n        <div className=\"skills\">\r\n            <p className=\"skills__title\">{capitalize(skillName)}</p>\r\n            <ul className=\"skills__container\">\r\n                <li className={skillValue > 0 ? \"skills__container__item skills__container__active\": \"skills__container__item\"}></li>\r\n                <li className={skillValue > 1 ? \"skills__container__item skills__container__active\": \"skills__container__item\"}></li>\r\n                <li className={skillValue > 2 ? \"skills__container__item skills__container__active\": \"skills__container__item\"}></li>\r\n                <li className={skillValue > 3 ? \"skills__container__item skills__container__active\": \"skills__container__item\"}></li>\r\n                <li className={skillValue > 4 ? \"skills__container__item skills__container__active\": \"skills__container__item\"}></li>\r\n            </ul>\r\n        </div>\r\n    )\r\n    \r\n}\r\n\r\n\r\nexport default SkillsBar;\r\n","import React from 'react';\r\nimport './Spinner.css';\r\n\r\nconst Spinner = () => {\r\n    return ( \r\n\r\n        <div className=\"sk-circle\">\r\n            <div className=\"sk-circle1 sk-child\"></div>\r\n            <div className=\"sk-circle2 sk-child\"></div>\r\n            <div className=\"sk-circle3 sk-child\"></div>\r\n            <div className=\"sk-circle4 sk-child\"></div>\r\n            <div className=\"sk-circle5 sk-child\"></div>\r\n            <div className=\"sk-circle6 sk-child\"></div>\r\n            <div className=\"sk-circle7 sk-child\"></div>\r\n            <div className=\"sk-circle8 sk-child\"></div>\r\n            <div className=\"sk-circle9 sk-child\"></div>\r\n            <div className=\"sk-circle10 sk-child\"></div>\r\n            <div className=\"sk-circle11 sk-child\"></div>\r\n            <div className=\"sk-circle12 sk-child\"></div>\r\n        </div>\r\n\r\n     );\r\n}\r\n \r\nexport default Spinner;","\r\n\r\nexport const getBreedImages = async(breed_id) => {\r\n\r\n    const api_key = '3a6c399a-f92b-4e8c-b5a5-142c8effa2f1';\r\n\r\n    let url = `https://api.thecatapi.com/v1/images/search?api_key=${api_key}&breed_id=${breed_id}&size=thumb&limit=6`;\r\n  \r\n    const resp = await fetch(url);\r\n    const data = await resp.json();\r\n\r\n    const images = data.map( (value, index) => data[index].url);\r\n\r\n    return images;\r\n}\r\n","export default __webpack_public_path__ + \"static/media/no_img.04fe48ca.png\";","import React, { useEffect, useState } from 'react';\r\nimport SkillsBar from './SkillsBar';\r\n\r\nimport Spinner from './spinner/Spinner';\r\nimport { getBreedImages } from '../services/getBreedImages';\r\nimport no_img from '../img/no_img.png';\r\n\r\nconst Modal = ({activeBreed, handleClose, modalType}) => {\r\n\r\n    const [loading, setLoading] = useState(false);\r\n    const [images, setImages] = useState([]);\r\n\r\n    const {name, temperament, origin, description, life_span, alt_names, affection_level, child_friendly, dog_friendly, energy_level, health_issues, intelligence, shedding_level, social_needs, stranger_friendly, image} = activeBreed;\r\n\r\n    const skills = {affection_level, energy_level, health_issues, intelligence, shedding_level, social_needs, child_friendly, dog_friendly, stranger_friendly};\r\n\r\n\r\n    useEffect(() => {  \r\n        setLoading(true)\r\n        getBreedImages(activeBreed.id)\r\n            .then(images => {\r\n                setImages(images)   \r\n                setLoading(false)\r\n            })\r\n    }, [activeBreed]);\r\n\r\n\r\n    // TODO: Cerrar el modal al hacer click fuera\r\n    return (\r\n        <div className=\"modal\">\r\n            <div className=\"modal__content\">\r\n                <div className=\"modal__content__inner\" style={{overflowY: modalType === 'images' ? 'hidden': 'auto'}}>\r\n                    <button className=\"closeButton\" type=\"button\" aria-label=\"close\" title=\"Cerrar\" onClick={handleClose}>\r\n                        <span className=\"closeButton__label\">\r\n                            <svg className=\"closeButton__label-svg\" focusable=\"false\" viewBox=\"0 0 24 24\" aria-hidden=\"true\">\r\n                                <path d=\"M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z\"></path>\r\n                            </svg>\r\n                        </span>\r\n                    </button>\r\n\r\n                    <h3 className=\"modalTitle\">{name} {alt_names && alt_names.trim() !== '' ? <span>{`(${alt_names})`}</span> : ''}</h3>\r\n                    <div className=\"modalContent\">\r\n                    { modalType === 'images' ?\r\n                        <div className=\"gallery\">\r\n                            {loading \r\n                                ? <Spinner/>\r\n                                :(\r\n                                    images.map( (img) => \r\n                                        <div className=\"gallery__item\" key={img}>\r\n                                            <img src={img} alt={name}/>\r\n                                        </div>\r\n                                    )\r\n                                )\r\n                            }\r\n                        </div>\r\n                    : (<>\r\n                        <div className=\"modalContent__main\">\r\n                            <img src={(image && Object.keys(image).length > 0 ) ? image.url : no_img} alt={name} className=\"modalContent__main-picture\"/>\r\n                            <div className=\"modalContent__main-text\">\r\n                                <p>{description}</p>\r\n                                <div>\r\n                                    <h3>Temperamento</h3>\r\n                                    <div className=\"chip-container\">\r\n                                    {\r\n                                        temperament.split(',').map( (t) => <span key={t}className=\"chip\">{t}</span>)\r\n                                    }\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <h3 className=\"modalTitlesInline\">País de origen:</h3> \r\n                        <span> {origin}</span>\r\n                        \r\n                        <br/>\r\n\r\n                        <h3 className=\"modalTitlesInline\">Esperanza de vida:</h3> \r\n                        <span> {life_span} años</span>\r\n                                             \r\n                        <h3>Skills</h3>\r\n                        <div className=\"skills-component\">\r\n                            {\r\n                            Object.entries(skills).map((skill) => {\r\n                                return(\r\n                                    <SkillsBar\r\n                                        key={skill[0]}\r\n                                        skillName={skill[0]}\r\n                                        skillValue={skill[1]}\r\n                                    />\r\n                                )\r\n                            })\r\n                            }\r\n                        </div>\r\n                        </>)\r\n                    }\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default Modal;\r\n","import { useState } from 'react';\r\n\r\nimport Modal from './Modal';\r\nimport no_img from '../img/no_img.png';\r\n\r\nconst Breed = ({breed}) => {\r\n\r\n    const {id, name, description, image} = breed;\r\n\r\n    const [open, setOpen] = useState(false);\r\n    const [modalType, setmodalType] = useState('details');\r\n\r\n    const handleOpen = () => {\r\n        setOpen(true);\r\n    };\r\n\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n    };\r\n\r\n\r\n    return (\r\n        <>\r\n        <div key={id} className=\"breed-card\">\r\n            <img src={(image && Object.keys(image).length > 0 ) ? image.url : no_img} alt={name} title=\"Ver galería\"  className=\"breed-card__img\"\r\n                onClick={() => {\r\n                    setmodalType('images')\r\n                    handleOpen();\r\n                }}\r\n            />\r\n            <div className=\"breed-card__content\">\r\n                <div className=\"breed-card__content-txt\">\r\n                    <h3>{name}</h3>\r\n                    <p>{description.slice(0, 130)}...</p>\r\n                </div>\r\n                <button   \r\n                    className=\"breed-card__content-btn\"               \r\n                    onClick={() => {\r\n                        setmodalType('details')\r\n                        handleOpen();\r\n                    }}>Ver detalles</button>\r\n            </div>\r\n        </div>\r\n\r\n        {\r\n        open ?\r\n            <Modal\r\n                activeBreed={breed}\r\n                handleClose={handleClose}\r\n                modalType={modalType}\r\n            />\r\n        :null\r\n        }\r\n        </>\r\n    )\r\n    \r\n}\r\n\r\n\r\nexport default Breed;","\r\nexport const getBreeds = async(currentPage, limit = '') => {\r\n\r\n    const api_key = '3a6c399a-f92b-4e8c-b5a5-142c8effa2f1';\r\n\r\n    let url_breeds = `https://api.thecatapi.com/v1/breeds?api_key=${api_key}`;\r\n\r\n    if (limit !== '') {\r\n        url_breeds = `https://api.thecatapi.com/v1/breeds?api_key=${api_key}&limit=${limit}&page=${currentPage}&order=Asc`;\r\n    }\r\n\r\n    const resp = await fetch(url_breeds);\r\n    const data = await resp.json();\r\n\r\n    //console.log(resp.headers)\r\n\r\n    for (let pair of resp.headers.entries()) {\r\n    //console.log(pair[0])\r\n        switch (pair[0]) {\r\n            case 'pagination-count':\r\n                data['paginationCount'] = pair[1];\r\n            break;\r\n            case 'pagination-limit':\r\n                data['paginationLimit'] = pair[1];\r\n            break;\r\n            case 'pagination-page':\r\n                data['paginationPage'] = pair[1];\r\n            break;\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n\r\n    //console.log(data)\r\n    //console.log(url_breeds)\r\n\r\n    return data;\r\n}\r\n\r\n","import React from 'react';\r\n\r\nconst Error = ({msg}) => {\r\n    return ( \r\n         \r\n        <div className=\"msg-error\">\r\n            <div className=\"msg-error__icon\">\r\n                <svg className=\"msg-error__icon__svg\" focusable=\"false\" viewBox=\"0 0 24 24\" aria-hidden=\"true\"><path d=\"M12 5.99L19.53 19H4.47L12 5.99M12 2L1 21h22L12 2zm1 14h-2v2h2v-2zm0-6h-2v4h2v-4z\"></path></svg>\r\n            </div>\r\n            <h3>{msg}</h3>\r\n        </div>\r\n     );\r\n}\r\n \r\nexport default Error;\r\n","import React, {useState, useEffect} from 'react';\r\n\r\nimport ReactPaginate from 'react-paginate';\r\n\r\nimport Breed from './Breed';\r\nimport Spinner from './spinner/Spinner';\r\nimport { getBreeds } from '../services/getBreeds';\r\nimport Error from './Error';\r\n\r\n\r\nconst Breeds = ({searchBreed}) => {\r\n\r\n    const [loading, setLoading] = useState(false);\r\n\r\n    const [breeds, setBreeds] = useState([]);\r\n\r\n    // Buscador\r\n    const [totalBreeds, setTotalBreeds] = useState([]);\r\n \r\n    // Pagination\r\n    const [currentPage, setCurrentPage] = useState(0);\r\n    const [totalPages, setTotalPages] = useState(1);\r\n    const pageLimit = 9; // Mostrar 9 elementos en cada página\r\n     \r\n\r\n    // Buscador\r\n    useEffect(() => { \r\n        setLoading(true); \r\n        getBreeds()\r\n            .then(breeds => {\r\n                setTotalBreeds(breeds) \r\n                setLoading(false)\r\n            })\r\n    }, [searchBreed]);\r\n\r\n\r\n    // Pagination\r\n    useEffect(() => {  \r\n        setLoading(true);\r\n        getBreeds(currentPage, pageLimit)\r\n            .then(breeds => {\r\n                const {paginationCount} = breeds;\r\n                setBreeds(breeds)\r\n                setTotalPages(Math.ceil(paginationCount / pageLimit))\r\n                setLoading(false)\r\n            })\r\n    }, [currentPage]);\r\n\r\n\r\n    const handlePagination = (e) => {\r\n        setCurrentPage(e.selected);\r\n    };\r\n\r\n    // Case insensitive\r\n    let searchResults = [];\r\n    if (Object.keys(searchBreed).length > 0 && searchBreed.search_breed !== '') {\r\n        searchResults = totalBreeds.filter(breed => breed.name.toLowerCase().includes(searchBreed.search_breed.toLowerCase()));\r\n    }\r\n               \r\n    return (\r\n        <> \r\n        {loading \r\n        ? <Spinner/> \r\n        : Object.keys(searchBreed).length > 0 && searchBreed.search_breed !== ''\r\n            ? (\r\n                searchResults.length > 0\r\n                ? (\r\n                    <div className=\"breeds-cards\">\r\n                        {searchResults.map(filteredBreed => (\r\n                            <Breed key={filteredBreed.id} breed={filteredBreed} />\r\n                        ))}\r\n                    </div>\r\n                )\r\n                : <Error msg=\"No se encontraron resultados\"/>\r\n            )              \r\n            : (\r\n                <>\r\n                <ReactPaginate\r\n                    previousLabel=\"&lt;\"\r\n                    nextLabel=\"&gt;\"\r\n                    breakLabel={<span className=\"gap\">...</span>}\r\n                    pageCount={totalPages}\r\n                    onPageChange={handlePagination}\r\n                    forcePage={currentPage}\r\n                    marginPagesDisplayed={3}\r\n                    pageRangeDisplayed={2}\r\n                    containerClassName={\"pagination\"}\r\n                    pageClassName={\"page-link\"}\r\n                    previousClassName={\"page-link\"}\r\n                    previousLinkClassName={\"page-item\"}\r\n                    nextClassName={\"page-link\"}\r\n                    nextLinkClassName={\"page-item\"}\r\n                    disabledClassName={\"disabled\"}\r\n                    activeClassName={\"page-item active\"}\r\n                    activeLinkClassName={\"page-link\"}\r\n                />\r\n                <div className=\"breeds-cards\">\r\n                    {breeds.map( breed => (\r\n                        <Breed key={breed.id} breed={breed} />\r\n                    ))}\r\n                </div>\r\n                <ReactPaginate\r\n                    previousLabel=\"&lt;\"\r\n                    nextLabel=\"&gt;\"\r\n                    breakLabel={<span className=\"gap\">...</span>}\r\n                    pageCount={totalPages}\r\n                    onPageChange={handlePagination}\r\n                    forcePage={currentPage}\r\n                    marginPagesDisplayed={3}\r\n                    pageRangeDisplayed={2}\r\n                    containerClassName={\"pagination pagination-bottom\"}\r\n                    pageClassName={\"page-link\"}\r\n                    previousClassName={\"page-link\"}\r\n                    previousLinkClassName={\"page-item\"}\r\n                    nextClassName={\"page-link\"}\r\n                    nextLinkClassName={\"page-item\"}\r\n                    disabledClassName={\"disabled\"}\r\n                    activeClassName={\"page-item active\"}\r\n                    activeLinkClassName={\"page-link\"}\r\n                />\r\n                </>\r\n            )\r\n        }\r\n        </>\r\n    )\r\n    \r\n}\r\n\r\n\r\nexport default Breeds;","import React from 'react';\r\n\r\nimport { useForm } from '../hooks/useForm';\r\n\r\nconst Search = ({setSearchBreed}) => {\r\n\r\n    const [ formValues, handleFormChange ] = useForm('');\r\n\r\n    const handleSearchChange = (e) => {\r\n        e.preventDefault();\r\n        setSearchBreed(formValues);   \r\n    };\r\n\r\n\r\n    return (\r\n        <div className=\"searchform\">\r\n            <h2>Buscador de razas de gatos</h2>\r\n            <form onSubmit={handleSearchChange} className=\"searchform__form\">\r\n                <input \r\n                    autoComplete='off' \r\n                    id=\"search_breed\"\r\n                    name=\"search_breed\"\r\n                    color=\"secondary\"\r\n                    onChange={handleFormChange}\r\n                    placeholder='Buscar raza...'\r\n                />\r\n                <button onClick={handleSearchChange}>Buscar</button>\r\n            </form>\r\n        </div>\r\n    )   \r\n\r\n}\r\n\r\n\r\nexport default Search;\r\n","import { useState } from 'react';\r\n\r\n\r\nexport const useForm = ( initialState = {} ) => {\r\n    \r\n    const [values, setValues] = useState(initialState);\r\n\r\n    const reset = () => {\r\n        setValues( initialState );\r\n    }\r\n\r\n\r\n    const handleInputChange = ({ target }) => {\r\n\r\n        setValues({\r\n            ...values,\r\n            [ target.name ]: target.value\r\n        });\r\n\r\n    }\r\n\r\n    return [ values, handleInputChange, reset ];\r\n\r\n}","import { useState } from 'react';\r\n\r\nimport Breeds from './components/Breeds';\r\nimport Search from './components/Search';\r\n\r\n\r\nfunction CatsApp() {\r\n\r\n\tconst [searchBreed, setSearchBreed] = useState({});\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<header>\r\n\t\t\t\t<Search\r\n\t\t\t\t\tsetSearchBreed={setSearchBreed}\r\n\t\t\t\t/>\r\n\t\t\t</header>\r\n\t\t\t<main>\r\n\t\t\t\t<Breeds\r\n\t\t\t\t\tsearchBreed={searchBreed}\r\n\t\t\t\t/>\r\n\t\t\t</main>\r\n\t\t\t<footer>&copy; Designed and developed by&nbsp;\r\n            \t<a href=\"https://github.com/tatianallorente/CatsApp-React\" target=\"_blank\" rel=\"noreferrer\" >Tatiana Llorente</a>\r\n            </footer>\r\n\t\t</>\r\n\t);\r\n}\r\n\r\nexport default CatsApp;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport CatsApp from './CatsApp';\r\n\r\nimport './sass/styles.scss'\r\n\r\nReactDOM.render(\r\n    <CatsApp />,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}